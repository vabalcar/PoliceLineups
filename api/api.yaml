openapi: '3.0.2'
info:
  title: Police lineups
  version: '1.0'
servers:
  - url: http://localhost:8080/v1
security: [jwt_user: []]
paths:
  /login:
    post:
      summary: Logins registered user
      x-openapi-router-controller: controllers.auth
      operationId: login
      security: [] # Disabled security
      requestBody:
        description: AuthRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: login result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /init/rootUser:
    get:
      summary: Inits root user
      x-openapi-router-controller: controllers.users
      operationId: initRootUser
      #security: [jwt_init: []]
      security: []
      responses:
        '200':
          description: root user initialization result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /users:
    get:
      summary: Returns all users
      x-openapi-router-controller: controllers.users
      operationId: getUsers
      responses:
        '200':
          description: a JSON array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Adds a user
      x-openapi-router-controller: controllers.users
      operationId: addUser
      requestBody:
        description: a user to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: addition result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /user/{username}:
    get:
      summary: Returns a user
      x-openapi-router-controller: controllers.users
      operationId: getUser
      parameters:
        - in: path
          name: username
          description: username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: a JSON object describing the User
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: Updates a user
      x-openapi-router-controller: controllers.users
      operationId: updateUser
      requestBody:
        description: a user to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: username
          description: username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: Removes a user
      x-openapi-router-controller: controllers.users
      operationId: removeUser
      parameters:
        - in: path
          name: username
          description: a username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: removal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /user/{username}/roles:
    get:
      summary: Returns roles of the user
      x-openapi-router-controller: controllers.users
      operationId: getUserRoles
      parameters:
        - in: path
          name: username
          description: username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: a JSON object describing the User
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Extends user roles
      x-openapi-router-controller: controllers.users
      operationId: addUserRole
      requestBody:
        description: a user to update
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      parameters:
        - in: path
          name: username
          description: username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /user/{username}/roles/{role}:
    get:
      summary: Determines if a user has a role
      x-openapi-router-controller: controllers.users
      operationId: hasUserRole
      parameters:
        - in: path
          name: username
          description: a username of a user
          required: true
          schema:
            type: string
        - in: path
          name: role
          description: a role of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: determination result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: Removes a user role
      x-openapi-router-controller: controllers.users
      operationId: removeUserRole
      parameters:
        - in: path
          name: username
          description: a username of a user
          required: true
          schema:
            type: string
        - in: path
          name: role
          description: a role of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: removal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /people:
    get:
      summary: Returns a list of people
      x-openapi-router-controller: controllers.people
      operationId: getPeople
      responses:
        '200':
          description: a JSON array of people
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      summary: Adds a person
      x-openapi-router-controller: controllers.people
      operationId: addPerson
      requestBody:
        description: a person to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: addition result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /person/{id}:
    get:
      summary: Returns a person
      x-openapi-router-controller: controllers.people
      operationId: getPerson
      parameters:
        - in: path
          name: id
          description: ID of the person
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: the person
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    patch:
      summary: Updates a person
      x-openapi-router-controller: controllers.people
      operationId: updatePerson
      requestBody:
        description: a person to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      parameters:
        - in: path
          name: id
          description: name of a person
          required: true
          schema:
            type: string
      responses:
        '200':
          description: update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: Removes a person
      x-openapi-router-controller: controllers.people
      operationId: removePerson
      parameters:
        - in: path
          name: id
          description: ID of a person
          required: true
          schema:
            type: string
      responses:
        '200':
          description: removal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  securitySchemes:
    jwt_user:
      type: http
      scheme: bearer
      bearerFormat: JWT
    jwt_admin:
      type: http
      scheme: bearer
      bearerFormat: JWT
    jwt_init:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        path:
          type: string
      required:
        - username
        - password
        - path
    Response:
      type: object
      properties:
        success: 
          type: boolean
    AuthResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            path: 
              type: string
            authToken:
              type: string
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
        email:
          type: string
    UserRole:
      type: object
      properties:
        username:
          type: string
        role:
          type: string
    Person:
      type: object
      properties:
        id:
          type: integer
        pid:
          type: string
        name:
          type: string
        born:
          type: integer
        nationality:
          type: string
        features:
          type: string
