openapi: "3.0.3"

info:
  title: Police lineups
  version: "0.1"

security:
  - JwtAuthUser: []

paths:
  /authorization:
    post:
      summary: Logins registered userUser
      x-openapi-router-controller: police_lineups.controllers.auth
      operationId: login
      security: [] # Enabled anonymous access
      requestBody:
        description: AuthRequest
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: login result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
    patch:
      summary: Renews auth token
      x-openapi-router-controller: police_lineups.controllers.auth
      operationId: renewAuthToken
      responses:
        "200":
          description: token renewal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTokenRenewalResponse"

  /users:
    get:
      summary: Returns all users
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: getUsers
      security: [JwtAuthAdmin: []]
      responses:
        "200":
          description: a JSON array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Adds a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: addUser
      security: [JwtAuthAdmin: []]
      requestBody:
        description: a user to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /users/current:
    get:
      summary: Returns a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: getCurrentUser
      responses:
        "200":
          description: a JSON object describing the User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: Updates a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: updateCurrentUser
      requestBody:
        description: update of user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: removeCurrentUser
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /users/{user_id}:
    get:
      summary: Returns a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: getUser
      security: [JwtAuthAdmin: []]
      parameters:
        - in: path
          name: user_id
          description: id of a user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: a JSON object describing the User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
    patch:
      summary: Updates a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: updateUser
      security: [JwtAuthAdmin: []]
      requestBody:
        description: update of user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      parameters:
        - in: path
          name: user_id
          description: id of a user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: removeUser
      security: [JwtAuthAdmin: []]
      parameters:
        - in: path
          name: user_id
          description: id of a user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /validation/users:
    post:
      summary: Validated properties of a new user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: validateNewUser
      requestBody:
        description: a user to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /people:
    get:
      summary: Returns a list of people
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: getPeople
      parameters:
        - in: query
          name: fullName
          schema:
            type: string
            minLength: 1
        - in: query
          name: minAge
          schema:
            type: integer
        - in: query
          name: maxAge
          schema:
            type: integer
        - in: query
          name: nationality
          schema:
            type: string
            minLength: 1
      responses:
        "200":
          description: a JSON array of people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
    post:
      summary: Adds a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: addPerson
      requestBody:
        description: a person to add
        required: true
        content:
          multipart/form-data:
            # $ref is not wotking for multipart/form-data
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  minLength: 1
                birthDate:
                  type: string
                  # custom serialization must happen in multipart/form-data
                nationality:
                  type: string
                  minLength: 1
                photoFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /people/{person_id}:
    get:
      summary: Returns a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: getPerson
      parameters:
        - in: path
          name: person_id
          description: id of a person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: found person
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        "404":
          description: person not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
    patch:
      summary: Updates a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: updatePerson
      requestBody:
        description: a person to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      parameters:
        - in: path
          name: person_id
          description: id of a person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: removePerson
      parameters:
        - in: path
          name: person_id
          description: id of a person
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /user/current/lineups:
    get:
      summary: Returns a list of lineups for all users
      x-openapi-router-controller: police_lineups.controllers.lineups
      operationId: getLineupsForCurrentUser
      responses:
        "200":
          description: a list of lineups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LineupOverview"

  /lineups:
    get:
      summary: Returns a list of lineups for all users
      x-openapi-router-controller: police_lineups.controllers.lineups
      operationId: getLineups
      security: [JwtAuthAdmin: []]
      responses:
        "200":
          description: a list of lineups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LineupOverview"
    post:
      summary: Adds a lineup
      x-openapi-router-controller: police_lineups.controllers.lineups
      operationId: addLineup
      requestBody:
        description: a lineup to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Lineup"
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /lineups/{lineup_id}:
    get:
      summary: Returns a lineup
      x-openapi-router-controller: police_lineups.controllers.lineups
      operationId: getLineup
      parameters:
        - in: path
          name: lineup_id
          description: id of a lineup
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: found lineup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lineup"
        "404":
          description: lineup not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
    patch:
      summary: Updates a lineup
      x-openapi-router-controller: police_lineups.controllers.lineups
      operationId: updateLineup
      requestBody:
        description: a lineup to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Lineup"
      parameters:
        - in: path
          name: lineup_id
          description: id of a lineup
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a lineup
      x-openapi-router-controller: police_lineups.controllers.lineups
      operationId: removeLineup
      parameters:
        - in: path
          name: lineup_id
          description: id of a lineup
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /lineups/recommendations:
    post:
      summary: Returns a list of recommended people based on list of people in lineup
      x-openapi-router-controller: police_lineups.controllers.recommendations
      operationId: getLineupRecommendations
      requestBody:
        description: list of people in lineup
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Person"
      responses:
        "200":
          description: a list of recommended people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"

  /blobs/{blob_name}:
    get:
      summary: Serves a blob
      x-openapi-router-controller: police_lineups.controllers.blobs
      operationId: getBlob
      parameters:
        - in: path
          name: blob_name
          description: name of a blob to serve
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        "200":
          description: a blob
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "404":
          description: blob not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
    patch:
      summary: Updates a blob
      x-openapi-router-controller: police_lineups.controllers.blobs
      operationId: updateBlob
      requestBody:
        description: a blob to update
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                blob:
                  type: string
                  format: binary
      parameters:
        - in: path
          name: blob_name
          description: name of a blob
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

components:
  securitySchemes:
    JwtAuthUser:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_JwtAuthUser # workaround of a bug in codegen

    JwtAuthAdmin:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_JwtAuthAdmin # workaround of a bug in codegen

  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    EmptyResponse:
      type: object
      nullable: true

    Response:
      type: object
      properties:
        error:
          type: string
          nullable: true

    AuthTokenRenewalResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            authToken:
              type: string
            tokenExpirationDatetime:
              type: string
              nullable: true
              format: date-time

    AuthResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - $ref: "#/components/schemas/AuthTokenRenewalResponse"
        - $ref: "#/components/schemas/User"

    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          minimum: 1
        username:
          type: string
          minLength: 1
        isAdmin:
          type: boolean
        email:
          type: string
          format: email
        fullName:
          type: string
          minLength: 1

    UserWithPassword:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            password:
              type: string
              minLength: 4
              maxLength: 16

    Person:
      type: object
      properties:
        personId:
          type: integer
          format: int64
          minimum: 1
        photoBlobName:
          type: string
          minLength: 1
        fullName:
          type: string
          minLength: 1
        birthDate:
          type: string
          format: date-time
        nationality:
          type: string
          minLength: 1

    LineupOverview:
      type: object
      properties:
        lineupId:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
        lastEditDateTime:
          type: string
          format: date-time
        ownerUsername:
          type: string
          minLength: 1

    Lineup:
      allOf:
        - $ref: "#/components/schemas/LineupOverview"
        - type: object
          properties:
            people:
              type: array
              items:
                $ref: "#/components/schemas/Person"
