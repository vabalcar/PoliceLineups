openapi: "3.0.3"
info:
  title: Police lineups
  version: "0.1"
security:
  - JwtAuthUser: []
paths:
  /authorization:
    post:
      summary: Logins registered userUser
      x-openapi-router-controller: police_lineups.controllers.auth
      operationId: login
      security: [] # Enabled anonymous access
      requestBody:
        description: AuthRequest
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: login result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
    patch:
      summary: Renews auth token
      x-openapi-router-controller: police_lineups.controllers.auth
      operationId: renewAuthToken
      responses:
        "200":
          description: token renewal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTokenRenewalResponse"
  /users:
    get:
      summary: Returns all users
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: getUsers
      security: [JwtAuthAdmin: []]
      responses:
        "200":
          description: a JSON array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Adds a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: addUser
      security: [JwtAuthAdmin: []]
      requestBody:
        description: a user to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /validation/user:
    patch:
      summary: Validated an update of a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: validateUserUpdate
      requestBody:
        description: update of a user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: validation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /user/{user_id}:
    get:
      summary: Returns a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: getUser
      security: [JwtAuthAdmin: []]
      parameters:
        - in: path
          name: user_id
          description: id of a user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: a JSON object describing the User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: Updates a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: updateUser
      security: [JwtAuthAdmin: []]
      requestBody:
        description: update of user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      parameters:
        - in: path
          name: user_id
          description: id of a user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: removeUser
      security: [JwtAuthAdmin: []]
      parameters:
        - in: path
          name: user_id
          description: id of a user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /currentUser:
    get:
      summary: Returns a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: getCurrentUser
      responses:
        "200":
          description: a JSON object describing the User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: Updates a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: updateCurrentUser
      requestBody:
        description: update of user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserWithPassword"
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a user
      x-openapi-router-controller: police_lineups.controllers.users
      operationId: removeCurrentUser
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /people:
    get:
      summary: Returns a list of people
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: getPeople
      responses:
        "200":
          description: a JSON array of people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
    post:
      summary: Adds a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: addPerson
      requestBody:
        description: a person to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /person/{id}:
    get:
      summary: Returns a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: getPerson
      parameters:
        - in: path
          name: id
          description: ID of the person
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: the person
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
    patch:
      summary: Updates a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: updatePerson
      requestBody:
        description: a person to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      parameters:
        - in: path
          name: id
          description: name of a person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
    delete:
      summary: Removes a person
      x-openapi-router-controller: police_lineups.controllers.people
      operationId: removePerson
      parameters:
        - in: path
          name: id
          description: ID of a person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
components:
  securitySchemes:
    JwtAuthUser:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_JwtAuthUser # workaround of a bug in codegen
    JwtAuthAdmin:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_JwtAuthAdmin # workaround of a bug in codegen
  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Response:
      type: object
      properties:
        success:
          type: boolean
    ValidationResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            validationError:
              type: string
    AuthTokenRenewalResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            authToken:
              type: string
            tokenExpirationDatetime:
              type: string
              format: date-time
    AuthResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            userId:
              type: integer
              format: int64
            isAdmin:
              type: boolean
            userFullName:
              type: string
            authToken:
              type: string
            tokenExpirationDatetime:
              type: string
              nullable: true
              format: date-time
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        username:
          type: string
        isAdmin:
          type: boolean
        fullName:
          type: string
    UserWithPassword:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            password:
              type: string
    Person:
      type: object
      properties:
        id:
          type: integer
        pid:
          type: string
        name:
          type: string
        born:
          type: integer
        nationality:
          type: string
        features:
          type: string
