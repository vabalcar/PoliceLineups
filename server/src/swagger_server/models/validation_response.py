# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.response import Response  # noqa: F401,E501
from swagger_server import util


class ValidationResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, success: bool=None, validation_error: str=None):  # noqa: E501
        """ValidationResponse - a model defined in Swagger

        :param success: The success of this ValidationResponse.  # noqa: E501
        :type success: bool
        :param validation_error: The validation_error of this ValidationResponse.  # noqa: E501
        :type validation_error: str
        """
        self.swagger_types = {
            'success': bool,
            'validation_error': str
        }

        self.attribute_map = {
            'success': 'success',
            'validation_error': 'validationError'
        }
        self._success = success
        self._validation_error = validation_error

    @classmethod
    def from_dict(cls, dikt) -> 'ValidationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ValidationResponse of this ValidationResponse.  # noqa: E501
        :rtype: ValidationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def success(self) -> bool:
        """Gets the success of this ValidationResponse.


        :return: The success of this ValidationResponse.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success: bool):
        """Sets the success of this ValidationResponse.


        :param success: The success of this ValidationResponse.
        :type success: bool
        """

        self._success = success

    @property
    def validation_error(self) -> str:
        """Gets the validation_error of this ValidationResponse.


        :return: The validation_error of this ValidationResponse.
        :rtype: str
        """
        return self._validation_error

    @validation_error.setter
    def validation_error(self, validation_error: str):
        """Sets the validation_error of this ValidationResponse.


        :param validation_error: The validation_error of this ValidationResponse.
        :type validation_error: str
        """

        self._validation_error = validation_error
