# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PeopleBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, full_name: str=None, birth_date: str=None, nationality: str=None, photo_file: str=None):  # noqa: E501
        """PeopleBody - a model defined in Swagger

        :param full_name: The full_name of this PeopleBody.  # noqa: E501
        :type full_name: str
        :param birth_date: The birth_date of this PeopleBody.  # noqa: E501
        :type birth_date: str
        :param nationality: The nationality of this PeopleBody.  # noqa: E501
        :type nationality: str
        :param photo_file: The photo_file of this PeopleBody.  # noqa: E501
        :type photo_file: str
        """
        self.swagger_types = {
            'full_name': str,
            'birth_date': str,
            'nationality': str,
            'photo_file': str
        }

        self.attribute_map = {
            'full_name': 'fullName',
            'birth_date': 'birthDate',
            'nationality': 'nationality',
            'photo_file': 'photoFile'
        }
        self._full_name = full_name
        self._birth_date = birth_date
        self._nationality = nationality
        self._photo_file = photo_file

    @classmethod
    def from_dict(cls, dikt) -> 'PeopleBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The people_body of this PeopleBody.  # noqa: E501
        :rtype: PeopleBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_name(self) -> str:
        """Gets the full_name of this PeopleBody.


        :return: The full_name of this PeopleBody.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name: str):
        """Sets the full_name of this PeopleBody.


        :param full_name: The full_name of this PeopleBody.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def birth_date(self) -> str:
        """Gets the birth_date of this PeopleBody.


        :return: The birth_date of this PeopleBody.
        :rtype: str
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date: str):
        """Sets the birth_date of this PeopleBody.


        :param birth_date: The birth_date of this PeopleBody.
        :type birth_date: str
        """

        self._birth_date = birth_date

    @property
    def nationality(self) -> str:
        """Gets the nationality of this PeopleBody.


        :return: The nationality of this PeopleBody.
        :rtype: str
        """
        return self._nationality

    @nationality.setter
    def nationality(self, nationality: str):
        """Sets the nationality of this PeopleBody.


        :param nationality: The nationality of this PeopleBody.
        :type nationality: str
        """

        self._nationality = nationality

    @property
    def photo_file(self) -> str:
        """Gets the photo_file of this PeopleBody.


        :return: The photo_file of this PeopleBody.
        :rtype: str
        """
        return self._photo_file

    @photo_file.setter
    def photo_file(self, photo_file: str):
        """Sets the photo_file of this PeopleBody.


        :param photo_file: The photo_file of this PeopleBody.
        :type photo_file: str
        """

        self._photo_file = photo_file
