openapi: 3.0.3
info:
  title: Police lineups
  version: "0.1"
servers:
- url: /
security:
- JwtAuthUser: []
paths:
  /authorization:
    post:
      summary: Logins registered userUser
      operationId: login
      requestBody:
        description: AuthRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        "200":
          description: login result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
      security: []
      x-openapi-router-controller: police_lineups.controllers.auth
    patch:
      summary: Renews auth token
      operationId: renew_auth_token
      responses:
        "200":
          description: token renewal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenRenewalResponse'
      x-openapi-router-controller: police_lineups.controllers.auth
  /users:
    get:
      summary: Returns all users
      operationId: get_users
      responses:
        "200":
          description: a JSON array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
      security:
      - JwtAuthAdmin: []
      x-openapi-router-controller: police_lineups.controllers.users
    post:
      summary: Adds a user
      operationId: add_user
      requestBody:
        description: a user to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithPassword'
        required: true
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - JwtAuthAdmin: []
      x-openapi-router-controller: police_lineups.controllers.users
  /validation/user:
    patch:
      summary: Validated an update of a user
      operationId: validate_user_update
      requestBody:
        description: update of a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      x-openapi-router-controller: police_lineups.controllers.users
  /user/{user_id}:
    get:
      summary: Returns a user
      operationId: get_user
      parameters:
      - name: user_id
        in: path
        description: id of a user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: a JSON object describing the User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - JwtAuthAdmin: []
      x-openapi-router-controller: police_lineups.controllers.users
    delete:
      summary: Removes a user
      operationId: remove_user
      parameters:
      - name: user_id
        in: path
        description: id of a user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - JwtAuthAdmin: []
      x-openapi-router-controller: police_lineups.controllers.users
    patch:
      summary: Updates a user
      operationId: update_user
      parameters:
      - name: user_id
        in: path
        description: id of a user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: update of user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithPassword'
        required: true
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - JwtAuthAdmin: []
      x-openapi-router-controller: police_lineups.controllers.users
  /currentUser:
    get:
      summary: Returns a user
      operationId: get_current_user
      responses:
        "200":
          description: a JSON object describing the User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: police_lineups.controllers.users
    delete:
      summary: Removes a user
      operationId: remove_current_user
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      x-openapi-router-controller: police_lineups.controllers.users
    patch:
      summary: Updates a user
      operationId: update_current_user
      requestBody:
        description: update of user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithPassword'
        required: true
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      x-openapi-router-controller: police_lineups.controllers.users
  /people:
    get:
      summary: Returns a list of people
      operationId: get_people
      responses:
        "200":
          description: a JSON array of people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                x-content-type: application/json
      x-openapi-router-controller: police_lineups.controllers.people
    post:
      summary: Adds a person
      operationId: add_person
      requestBody:
        description: a person to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: addition result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      x-openapi-router-controller: police_lineups.controllers.people
  /person/{id}:
    get:
      summary: Returns a person
      operationId: get_person
      parameters:
      - name: id
        in: path
        description: ID of the person
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: the person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      x-openapi-router-controller: police_lineups.controllers.people
    delete:
      summary: Removes a person
      operationId: remove_person
      parameters:
      - name: id
        in: path
        description: ID of a person
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: removal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      x-openapi-router-controller: police_lineups.controllers.people
    patch:
      summary: Updates a person
      operationId: update_person
      parameters:
      - name: id
        in: path
        description: name of a person
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: a person to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      x-openapi-router-controller: police_lineups.controllers.people
components:
  schemas:
    AuthRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Response:
      type: object
      properties:
        error:
          type: string
          nullable: true
      example:
        error: error
    AuthTokenRenewalResponse:
      allOf:
      - $ref: '#/components/schemas/Response'
      - type: object
        properties:
          authToken:
            type: string
          tokenExpirationDatetime:
            type: string
            format: date-time
            nullable: true
    AuthResponse:
      allOf:
      - $ref: '#/components/schemas/Response'
      - $ref: '#/components/schemas/AuthTokenRenewalResponse'
      - $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        username:
          type: string
        isAdmin:
          type: boolean
        fullName:
          type: string
      example:
        fullName: fullName
        isAdmin: true
        userId: 0
        username: username
    UserWithPassword:
      allOf:
      - $ref: '#/components/schemas/User'
      - type: object
        properties:
          password:
            type: string
    Person:
      type: object
      properties:
        id:
          type: integer
        pid:
          type: string
        name:
          type: string
        born:
          type: integer
        nationality:
          type: string
        features:
          type: string
      example:
        features: features
        nationality: nationality
        born: 6
        name: name
        pid: pid
        id: 0
  securitySchemes:
    JwtAuthUser:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_JwtAuthUser
    JwtAuthAdmin:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_JwtAuthAdmin

